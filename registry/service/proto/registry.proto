syntax = "proto3";

package go.vine.registry;

service Registry {
  rpc GetService(GetRequest) returns (GetResponse) {};
  rpc Register(Service) returns (EmptyResponse) {};
  rpc Deregister(Service) returns (EmptyResponse) {};
  rpc ListServices(ListRequest) returns (ListResponse) {};
  rpc Watch(WatchRequest) returns (stream Result) {};
}

// Service represents a vine service
message Service {
  string name = 1;
  string version = 2;
  map<string, string> metadata = 3;
  repeated Endpoint endpoints = 4;
  repeated Node nodes = 5;
  Options options = 6;
}

// Node represents the node the service is on
message Node {
  string id = 1;
  string address = 2;
  int64 port = 3;
  map<string, string> metadata = 4;
}

// Endpoint is a endpoint provided by a service
message Endpoint {
  string name = 1;
  Value request = 2;
  Value response = 3;
  map<string, string> metadata = 4;
}

// Value is an opaque value for a request or response
